on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created:  ${{ steps.release.outputs.release_created }}
      release_tag:  ${{ steps.release.outputs.tag_name }}
      major:  ${{ steps.release.outputs.major }}
      minor:  ${{ steps.release.outputs.minor }}
      patch:  ${{ steps.release.outputs.patch }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          release-type: node

  okay-release-windows:
    needs: release-please
    if: needs.release-please.outputs.release_created
    runs-on: windows-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: build
        uses: borales/actions-yarn@v4
        env:
          GH_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
        with:
          cmd: build:win
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.release_tag }} ./dist/mterm-${{ needs.release-please.outputs.major}}.${{ needs.release-please.outputs.minor}}.${{ needs.release-please.outputs.patch}}${{ vars.RELEASE_LABEL }}-setup.exe

  okay-release-linux:
    needs: release-please
    if: needs.release-please.outputs.release_created
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: build
        uses: borales/actions-yarn@v4
        env:
          GH_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
        with:
          cmd: build:linux
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
        # mterm_1.0.6-beta_amd64.deb
        run: gh release upload ${{ needs.release-please.outputs.release_tag }} ./dist/mterm_${{ needs.release-please.outputs.major}}.${{ needs.release-please.outputs.minor}}.${{ needs.release-please.outputs.patch}}${{ vars.RELEASE_LABEL }}_amd64.deb

  okay-release-mac:
    needs: release-please
    if: needs.release-please.outputs.release_created
    runs-on: macos-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
      - name: build
        uses: borales/actions-yarn@v4
        with:
          cmd: build:mac
        env:
          GH_TOKEN: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          CSC_LINK: ${{ secrets.MAC_CSC }}
          
  discord-message:
    runs-on: ubuntu-latest
    needs: [release-please, okay-release-windows, okay-release-mac, okay-release-linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Notify Discord
        uses: SethCohen/github-releases-to-discord@v1.13.1
        with:
          webhook_url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          color: "3945071"
          username: "MTERM"
          avatar_url: "https://cdn.discordapp.com/avatars/1231588950125183077/b4758eee539540263682fe3f1e93251e.png"
          content: "||x||"
          footer_title: "Changelog"
          footer_icon_url: "https://cdn.discordapp.com/avatars/487431320314576937/bd64361e4ba6313d561d54e78c9e7171.png"
          footer_timestamp: true
